/*
 * ConsultaCompeticao.java
 *
 * Created on 25 de Dezembro de 2007, 03:58
 */

package arrancada.Formularios;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import arrancada.Util.TeclaPress;
import arrancada.Util.ManipularJTable;

/**
 *
 * @author  xp
 */
public class ConsultaCompeticao extends javax.swing.JDialog {
    
    /** Creates new form ConsultaCompeticao */
    public ConsultaCompeticao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centralizar();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneCompeticao1 = new javax.swing.JScrollPane();
        jTableCompeticao = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabelPesquisa = new javax.swing.JLabel();
        jFormattedTextFieldPesquisa = new javax.swing.JFormattedTextField();
        jLabelBusca = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuSelecionar = new javax.swing.JMenu();
        jMenuFechar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Competição");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jScrollPaneCompeticao1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableCompeticao.setAutoCreateRowSorter(true);
        jTableCompeticao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Data", "UF", "Cidade"
            }
        ));
        jTableCompeticao.getTableHeader().setReorderingAllowed(false);
        jTableCompeticao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableCompeticaoKeyPressed(evt);
            }
        });
        jScrollPaneCompeticao1.setViewportView(jTableCompeticao);

        jLabel1.setBackground(new java.awt.Color(255, 255, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("[F2]Código    [F3]Nome    [F4]Data");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelPesquisa.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelPesquisa.setText("Pesquisando por Código");

        jFormattedTextFieldPesquisa.setBackground(new java.awt.Color(255, 255, 204));
        jFormattedTextFieldPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldPesquisaKeyPressed(evt);
            }
        });

        jLabelBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/search_f2.png"))); // NOI18N
        jLabelBusca.setName("jLabelImagem"); // NOI18N
        jLabelBusca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBuscaMouseClicked(evt);
            }
        });

        jMenuSelecionar.setMnemonic(KeyEvent.VK_S);
        jMenuSelecionar.setText("Selecionar");
        jMenuSelecionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuSelecionarMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuSelecionar);

        jMenuFechar.setMnemonic(KeyEvent.VK_F);
        jMenuFechar.setText("Fechar");
        jMenuFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFecharActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuFechar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jFormattedTextFieldPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabelBusca)
                .addContainerGap())
            .addComponent(jScrollPaneCompeticao1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPaneCompeticao1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPesquisa)
                    .addComponent(jLabelBusca)
                    .addComponent(jFormattedTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableCompeticaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableCompeticaoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_F4) 
        {
            jLabelPesquisa.setText(teclaPress.KeyCompeticao(evt));
            jFormattedTextFieldPesquisa.requestFocus();
        }
        if((evt.getKeyCode() == KeyEvent.VK_F2) ||(evt.getKeyCode() == KeyEvent.VK_F3)) 
        {
            jLabelPesquisa.setText(teclaPress.KeyCompeticao(evt));
            jFormattedTextFieldPesquisa.requestFocus();
            jFormattedTextFieldPesquisa.setFormatterFactory(null);
        } 
        else if((evt.getKeyCode() == KeyEvent.VK_ENTER)) 
        {
            codigo = Integer.parseInt(String.valueOf(jTableCompeticao.getValueAt(jTableCompeticao.getSelectedRow() ,0)));
            this.dispose();
        }
    }//GEN-LAST:event_jTableCompeticaoKeyPressed

    public DefaultFormatterFactory setFormatoData() {  
    MaskFormatter mascara = null;  
    try {  
            mascara = new MaskFormatter("##/##/####");
            mascara.setPlaceholderCharacter('_');
        } catch (ParseException pe) { }  
        DefaultFormatterFactory factory = new DefaultFormatterFactory(mascara, mascara);  
        return factory;
    }
    
    private void jFormattedTextFieldPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldPesquisaKeyPressed
        int retorno = 0;
        if((evt.getKeyCode() == KeyEvent.VK_F2) || (evt.getKeyCode() == KeyEvent.VK_F3)) {
            jFormattedTextFieldPesquisa.setFormatterFactory(null);
            jFormattedTextFieldPesquisa.setText("");
        } 
        else 
        {
            if(evt.getKeyCode() == KeyEvent.VK_F4) 
            {
                jFormattedTextFieldPesquisa.setFormatterFactory(setFormatoData());
                jLabelPesquisa.setText(teclaPress.KeyCompeticao(evt));
                jFormattedTextFieldPesquisa.requestFocus();
            }
        }
        jLabelPesquisa.setText(teclaPress.KeyCompeticao(evt));
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) 
        {
            if(jFormattedTextFieldPesquisa.getText().trim().isEmpty() || (jFormattedTextFieldPesquisa.getText().equals("__/__/____"))) {
                retorno = manipularJtable.competicao(jTableCompeticao, "", "0");
            } else if(jLabelPesquisa.getText().equals("Pesquisando por Código")) {
                retorno = manipularJtable.competicao(jTableCompeticao, jFormattedTextFieldPesquisa.getText().trim(), "1");
            } else if(jLabelPesquisa.getText().equals("Pesquisando por Nome")) {
                retorno = manipularJtable.competicao(jTableCompeticao, jFormattedTextFieldPesquisa.getText().toUpperCase(), "2");
            } else if(jLabelPesquisa.getText().equals("Pesquisando por Data")) {
                retorno = manipularJtable.competicao(jTableCompeticao, jFormattedTextFieldPesquisa.getText(), "3");
            }
            if(retorno == 1) 
            {
                jTableCompeticao.requestFocus();
                jTableCompeticao.setRowSelectionInterval(0, 0);
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma Competição foi Encontrada!");
            }
        }
    }//GEN-LAST:event_jFormattedTextFieldPesquisaKeyPressed

    private void jLabelBuscaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBuscaMouseClicked
        int retorno = 0;
        if(jFormattedTextFieldPesquisa.getText().trim().isEmpty()) {
            retorno = manipularJtable.competicao(jTableCompeticao, "", "0");
        } else if(jLabelPesquisa.getText().equals("Pesquisando por Código")) {
            retorno = manipularJtable.competicao(jTableCompeticao, jFormattedTextFieldPesquisa.getText(), "1");
        } else if(jLabelPesquisa.getText().equals("Pesquisando por Nome")) {
            retorno = manipularJtable.competicao(jTableCompeticao, jFormattedTextFieldPesquisa.getText(), "2");
        } else if(jLabelPesquisa.getText().equals("Pesquisando por Data")) {
            retorno = manipularJtable.competicao(jTableCompeticao, jFormattedTextFieldPesquisa.getText(), "2");
        }
        if(retorno == 1) {
            jTableCompeticao.requestFocus();
            jTableCompeticao.setRowSelectionInterval(0, 0);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhuma Competição foi Encontrada!");
        }
    }//GEN-LAST:event_jLabelBuscaMouseClicked

    private void jMenuSelecionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuSelecionarMouseClicked
        // Se a linha for == -1 siginifica que não tem linha selecionada
        if(jTableCompeticao.getSelectedRow() != -1) {
            
            codigo = Integer.parseInt(String.valueOf(jTableCompeticao.getValueAt(jTableCompeticao.getSelectedRow() ,0)));
            nome= String.valueOf(jTableCompeticao.getValueAt(jTableCompeticao.getSelectedRow() ,1));
            this.dispose();
        } else {
            //Exibe Mensagem caso nenhuma linha esteja selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma Competiçao na tabela.");
        }
    }//GEN-LAST:event_jMenuSelecionarMouseClicked

    private void jMenuFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFecharActionPerformed
        codigo = -1;
        dispose();
    }//GEN-LAST:event_jMenuFecharActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        jFormattedTextFieldPesquisa.requestFocus();
    }//GEN-LAST:event_formWindowActivated
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConsultaCompeticao dialog = new ConsultaCompeticao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void centralizar(){  
      /* Função para centralizar janela na tela */  
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  
       Dimension frameSize = getSize();  
       setLocation(new Point((screenSize.width - frameSize.width) / 2,  
                             (screenSize.height - frameSize.width) / 2));  
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField jFormattedTextFieldPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBusca;
    private javax.swing.JLabel jLabelPesquisa;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFechar;
    private javax.swing.JMenu jMenuSelecionar;
    private javax.swing.JScrollPane jScrollPaneCompeticao1;
    private javax.swing.JTable jTableCompeticao;
    // End of variables declaration//GEN-END:variables
 
    TeclaPress teclaPress = new TeclaPress();
    ManipularJTable manipularJtable = new ManipularJTable();
    public static int codigo = -1;
    public static String nome = "";
}
