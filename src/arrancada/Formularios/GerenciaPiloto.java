/*
 * GerenciaPiloto.java
 *
 * Created on 14 de Agosto de 2007, 09:56
 */

package arrancada.Formularios;

import arrancada.Util.ValidarCodigoCategoria;
import arrancada.Util.Limpar;
import arrancada.Dao.ServicoBDAO;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author  monitor
 */
public class GerenciaPiloto extends javax.swing.JDialog {
    
    /** Creates new form GerenciaPiloto */
    public GerenciaPiloto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centralizar();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCodigo = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabelUF = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jComboBoxEstado = new javax.swing.JComboBox();
        jLabelCIdade = new javax.swing.JLabel();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jTextFieldCidade = new javax.swing.JTextField();
        jButtonConsultaPiloto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Piloto");
        setModal(true);
        setName("GerenciaPiloto"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabelCodigo.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelCodigo.setText("CÃ³digo:");

        jLabelNome.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelNome.setText("Nome:");

        jLabelUF.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelUF.setText("UF:");

        jTextFieldCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoFocusLost(evt);
            }
        });

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        jLabelCIdade.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelCIdade.setText("Cidade:");

        jButtonConfirmar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButtonConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/14.png"))); // NOI18N
        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConfirmarMouseClicked(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/15.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCancelarMouseClicked(evt);
            }
        });

        jButtonFechar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/06.png"))); // NOI18N
        jButtonFechar.setText("Fechar");
        jButtonFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFecharMouseClicked(evt);
            }
        });

        jButtonConsultaPiloto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/botaoconsulta.png"))); // NOI18N
        jButtonConsultaPiloto.setFocusable(false);
        jButtonConsultaPiloto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultaPilotoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabelCodigo)
                            .add(jLabelNome)
                            .add(jLabelCIdade))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(272, 272, 272)
                                .add(jLabelUF)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBoxEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTextFieldNome, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                                    .add(jTextFieldCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(jTextFieldCodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jButtonConsultaPiloto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(51, 51, 51)
                        .add(jButtonConfirmar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonCancelar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonFechar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelCodigo)
                        .add(jTextFieldCodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jButtonConsultaPiloto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelNome))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelUF)
                        .add(jComboBoxEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelCIdade)
                        .add(jTextFieldCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonConfirmar)
                    .add(jButtonCancelar)
                    .add(jButtonFechar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    if(evt.getOppositeWindow() instanceof Piloto)
    {
        jButtonConsultaPiloto.setVisible(true);
        limpar.limpajTextField(jTextFieldNome);
        limpar.limpajTextField(jTextFieldCidade);
        jTextFieldNome.setEditable(true);
        jTextFieldCidade.setEditable(true);
        jComboBoxEstado.setEditable(true);
        if( (this.getTitle().equals("AlteraÃ§Ã£o de Piloto")) || (this.getTitle().equals("ExclusÃ£o de Piloto")))
        {
            try
            {
                ResultSet rs = servico.selectPiloto(String.valueOf(Integer.parseInt(codigo)),"1");
                if(rs.next() != false)
                {                
                    jTextFieldCodigo.setText(codigo);
                    jTextFieldNome.setText(rs.getString(2));
                    jTextFieldCidade.setText(rs.getString(4));
                    jComboBoxEstado.setSelectedItem(rs.getString(3));
                    jTextFieldNome.requestFocus();
                    jTextFieldCodigo.setEnabled(false);
                }
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(GerenciaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(this.getTitle().equals("ExclusÃ£o de Piloto"))
            {
                jTextFieldNome.setEditable(false);
                jTextFieldCidade.setEditable(false);
                jComboBoxEstado.setEditable(false);
            }
        }
        else if (this.getTitle().equals("InclusÃ£o de Piloto") )
        {
            jButtonConsultaPiloto.setVisible(false);
            String zeros = "0000"+servico.proximoCodigo("piloto");
            jTextFieldCodigo.setText(zeros.substring(zeros.length()-4));
            jTextFieldCodigo.setEnabled(false);
        }
     }
}//GEN-LAST:event_formWindowActivated

private void jButtonCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelarMouseClicked
    retornoBotao(clikmenu, 1);
}//GEN-LAST:event_jButtonCancelarMouseClicked

private void jButtonConfirmarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmarMouseClicked
    if(jTextFieldCodigo.getText().equals(""))
    {
        jTextFieldCodigo.requestFocus();
        JOptionPane.showMessageDialog(this, "Campo cÃ³digo nÃ£o pode ficar vazio!", "AtenÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    else
    {
       if(jTextFieldNome.getText().equals(""))
       {
           
           jTextFieldNome.requestFocus();
           JOptionPane.showMessageDialog(this, "Campo nome nÃ£o pode ficar vazio!", "AtenÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
           return;
       }
       else
       {
           if(jTextFieldCidade.getText().equals(""))
           {
               jTextFieldCidade.requestFocus();
               JOptionPane.showMessageDialog(this, "Campo cidade nÃ£o pode ficar vazio!", "AtenÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
               return;
           }
           else
           {
               if(this.getTitle().equals("InclusÃ£o de Piloto"))
               {
                   servico.insertPiloto(Integer.parseInt(jTextFieldCodigo.getText()), jTextFieldNome.getText(), jComboBoxEstado.getSelectedItem().toString(), jTextFieldCidade.getText());
                   String zeros = "0000"+servico.proximoCodigo("piloto");
                   jTextFieldCodigo.setText(zeros.substring(zeros.length()-4));
               }
               else if(this.getTitle().equals("AlteraÃ§Ã£o de Piloto"))
               {
                   
                   int retorno = servico.updatePiloto(Integer.parseInt(jTextFieldCodigo.getText()), jTextFieldNome.getText(), jComboBoxEstado.getSelectedItem().toString(), jTextFieldCidade.getText());
                   if(retorno == 1)
                   {
                        limpar.limpajTextField(jTextFieldNome);
                        retornoBotao(clikmenu, 0);
                        codigo = "";
                        JOptionPane.showMessageDialog(null, "Piloto Alterado com Sucesso", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                   }
                   else
                   {
                        JOptionPane.showMessageDialog(null, "Piloto nÃ£o pode ser alterado", "Mensagem", JOptionPane.ERROR_MESSAGE);
                   }
               }
               else if(this.getTitle().equals("ExclusÃ£o de Piloto"))
               {
                   
                   ResultSet rs = null;
                   try
                   {
                        //selecionar piloto para verificar se pode excluir ou nÃ£o)
                        rs = servico.selectCompetidor(jTextFieldCodigo.getText(), "", "", "8");
                        if(rs.next() == true)
                        {
                            JOptionPane.showMessageDialog(this, "Piloto nÃ£o pode ser Excluido. Existe um Competidor cadastrado para este Piloto.","Piloto nÃ£o pode ser ExcluÃ­do", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                    catch(SQLException ex) 
                    {
                        Logger.getLogger(ServicoBDAO.class.getName()).log(Level.SEVERE, null, ex);
                        return;
                    }
                    finally
                    {
                            try 
                            {
                                rs.close();
                            } 
                            catch (SQLException ex) 
                            {
                                Logger.getLogger(GerenciaCategoria.class.getName()).log(Level.SEVERE, null, ex);
                            }
                    }
                   int retorno = servico.deletePiloto(Integer.parseInt(jTextFieldCodigo.getText()));
                   if(retorno == 1)
                   {
                        limpar.limpajTextField(jTextFieldNome);
                        retornoBotao(clikmenu, 0);
                        codigo = "";
                        JOptionPane.showMessageDialog(null, "Piloto ExcluÃ­do com Sucesso", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                   }
                   else
                   {
                        JOptionPane.showMessageDialog(null, "Piloto nÃ£o pode ser ExcluÃ­do", "Mensagem", JOptionPane.ERROR_MESSAGE);
                   }
               }
           }
       }
    }
    retornoBotao(clikmenu, 0);
}//GEN-LAST:event_jButtonConfirmarMouseClicked

private void jButtonFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFecharMouseClicked
    limpar.limpajTextField(jTextFieldCodigo);
    limpar.limpajTextField(jTextFieldNome);
    limpar.limpajTextField(jTextFieldCidade);
    dispose();
}//GEN-LAST:event_jButtonFecharMouseClicked

private void jTextFieldCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoFocusLost
    if (evt.getOppositeComponent() instanceof JButton || evt.getComponent() instanceof JOptionPane || clicouBotaoPesquisa == 1)
    {
        clicouBotaoPesquisa = 0;
        return;
    }
    else
    {
        try 
        {
            ServicoBDAO servico = new ServicoBDAO();
            String zeros = "0000" + jTextFieldCodigo.getText().trim();
            jTextFieldCodigo.setText(zeros.substring(zeros.length() - 4));
            int codformatado = Integer.parseInt(jTextFieldCodigo.getText().trim());
            ResultSet rs = servico.selectPiloto(Integer.toString(codformatado), "1");
            if ((rs.next() == false) || (rs == null)) 
            {
                jTextFieldCodigo.setEnabled(true);
                rs.close();
                limpar.limpajTextField(jTextFieldCodigo);
                limpar.limpajTextField(jTextFieldNome);
                limpar.limpajTextField(jTextFieldCidade);
                jTextFieldCodigo.requestFocus();
                JOptionPane.showMessageDialog(this,"CÃ³digo nÃ£o Cadastrado","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                jTextFieldCodigo.setEnabled(false);
                jTextFieldNome.setText(rs.getString(2));
                jComboBoxEstado.setSelectedItem(rs.getString(3));
                jTextFieldCidade.setText(rs.getString(4));
                rs.close();
                if(this.getTitle().equals("ExclusÃ£o de VeÃ­culo"))
                {
                    jTextFieldNome.setEnabled(false);
                }
            }
        }
        catch (SQLException ex) 
        {
            Logger.getLogger(ValidarCodigoCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_jTextFieldCodigoFocusLost

private void jButtonConsultaPilotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultaPilotoActionPerformed
    clicouBotaoPesquisa = 1;
    retornoBotao(clikmenu, 1);
    ConsultaPiloto consultaPiloto = new ConsultaPiloto(null, true);
    consultaPiloto.setVisible(true);
    if(consultaPiloto.codigo != -1)
    {
        jTextFieldCodigo.setText(Integer.toString(consultaPiloto.codigo));
        jTextFieldCodigo.transferFocus();
    }
}//GEN-LAST:event_jButtonConsultaPilotoActionPerformed


private void retornoBotao(String menu, int botao)
{
    limpar.limpajTextField(jTextFieldNome);
    limpar.limpajTextField(jTextFieldCidade);
    if( (menu.equals("0")) && ( (botao == 0) || (botao == 1)))
    {        
        jTextFieldNome.requestFocus();
    }
    else if ((menu.equals("1")) || (menu.equals("2"))) 
    {
        codigo = "";
        limpar.limpajTextField(jTextFieldCodigo);
        jTextFieldCodigo.setEnabled(true);
        jTextFieldCodigo.requestFocus();
    }
}   

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GerenciaPiloto dialog = new GerenciaPiloto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void centralizar(){  
      /* FunÃ§Ã£o para centralizar janela na tela */  
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  
       Dimension frameSize = getSize();  
       setLocation(new Point((screenSize.width - frameSize.width) / 2,  
                             (screenSize.height - frameSize.width) / 2));  
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonConsultaPiloto;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JComboBox jComboBoxEstado;
    private javax.swing.JLabel jLabelCIdade;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelUF;
    private javax.swing.JTextField jTextFieldCidade;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
    
    public String clikmenu;  
    Limpar limpar = new Limpar();
    ServicoBDAO servico = new ServicoBDAO();
    public String codigo;
    private int clicouBotaoPesquisa = 0;
}
