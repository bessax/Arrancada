/*
 * GerenciaCategoria.java
 *
 * Created on 14 de Agosto de 2007, 09:07
 */

package arrancada.Formularios;

import arrancada.Util.ValidarCodigoCategoria;
import arrancada.Util.Limpar;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import arrancada.Dao.ServicoBDAO;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author  monitor
 */
public class GerenciaCategoria extends javax.swing.JDialog {
    
    /** Creates new form GerenciaCategoria */
    public GerenciaCategoria(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centralizar();
    }
  
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCodigo = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jButtonConsultaCategoria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Categoria");
        setModal(true);
        setName("GerenciaCategoria"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabelCodigo.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelCodigo.setText("Código:");

        jLabelNome.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabelNome.setText("Nome:");

        jTextFieldCodigo.setRequestFocusEnabled(false);
        jTextFieldCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoFocusLost(evt);
            }
        });

        jButtonConfirmar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButtonConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/14.png"))); // NOI18N
        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/15.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonFechar.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButtonFechar.setText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jButtonConsultaCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrancada.Imagens/botaoconsulta.png"))); // NOI18N
        jButtonConsultaCategoria.setFocusable(false);
        jButtonConsultaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultaCategoriaActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(jLabelNome)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextFieldNome, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabelCodigo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextFieldCodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonConsultaCategoria, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jButtonConfirmar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonCancelar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonFechar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelCodigo)
                    .add(jTextFieldCodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonConsultaCategoria, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldNome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelNome))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCancelar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButtonConfirmar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButtonFechar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    if(evt.getOppositeWindow() instanceof Categoria)
    {
        jButtonConsultaCategoria.setVisible(true);
        jTextFieldNome.setEditable(true);
        retornoBotao(clikmenu, 0);
        if( (this.getTitle().equals("Alteração de Categoria")) || (this.getTitle().equals("Exclusão de Categoria")))
        {
            try
            {
                ResultSet rs = servico.selectCategoria(String.valueOf(Integer.parseInt(codigo)), "1");
                if(rs.next() != false)
                {
                    jTextFieldCodigo.setEnabled(true);
                    jTextFieldCodigo.setText(codigo);
                    jTextFieldCodigo.setEnabled(false);
                    jTextFieldNome.setText(rs.getString(2));
                    jTextFieldNome.requestFocus();
                }
                if(this.getTitle().equals("Exclusão de Categoria"))
                {
                    jTextFieldNome.setEditable(false);
                }
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(GerenciaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if (this.getTitle().equals("Inclusão de Categoria") )
        {
            jButtonConsultaCategoria.setVisible(false);
            String zeros = "0000"+servico.proximoCodigo("categoria");
            jTextFieldCodigo.setText(zeros.substring(zeros.length()-4));
            jTextFieldCodigo.setEnabled(false);
        }
    }
}//GEN-LAST:event_formWindowActivated

private void retornoBotao(String menu, int botao)
{
    limpar.limpajTextField(jTextFieldNome);
    
    /* If/else para saber em qual componente ira retornar o focus, apartir do menu
     * e do botao que foi acionado
     */    
    if( (menu.equals("0")) && ( (botao == 0) || (botao == 1) ) )
    {        
        jTextFieldNome.requestFocus();
    }
    else if ( (menu.equals("1")) || (menu.equals("2") ) ) 
    {
        limpar.limpajTextField(jTextFieldCodigo);
        jTextFieldCodigo.setEnabled(true);
        jTextFieldCodigo.requestFocus();
    }
}
        
private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
    retornoBotao(clikmenu, 1);
}//GEN-LAST:event_jButtonCancelarActionPerformed

private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
    if(jTextFieldCodigo.getText().equals(""))
    {
        jTextFieldCodigo.setEnabled(true);
        jTextFieldCodigo.requestFocus();
        JOptionPane.showMessageDialog(null, "Campo código não pode ficar vazio", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
    }
    else
    {
        if(jTextFieldNome.getText().equals(""))
        {
            jTextFieldNome.requestFocus();
            JOptionPane.showMessageDialog(null, "Compo nome não pode ficar vazio", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            if(this.getTitle().equals("Inclusão de Categoria"))
            {
                servico.insertCategoria(jTextFieldCodigo.getText(), jTextFieldNome.getText());
                String zeros = "0000"+servico.proximoCodigo("categoria");
                jTextFieldCodigo.setText(zeros.substring(zeros.length()-4));
            }
            else if(this.getTitle().equals("Alteração de Categoria"))
            {
                int retorno = servico.updateCategoria(jTextFieldCodigo.getText(), jTextFieldNome.getText());
                if(retorno == 1)
                {
                    limpar.limpajTextField(jTextFieldNome);
                    retornoBotao(clikmenu, 0);
                    codigo = "";
                    JOptionPane.showMessageDialog(null, "Categoria Alterada com Sucesso", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Categoria não pode ser alterada", "Mensagem", JOptionPane.ERROR_MESSAGE);
                }
            }
            else if(this.getTitle().equals("Exclusão de Categoria"))
            {
                ResultSet rs = null;
                try
                {
                    //selecionar categoria para verificar se pode excluir ou não)
                    rs = servico.selectPuxada(jTextFieldCodigo.getText(),"", "", "4");
                    if(rs.next() == true)
                    {
                        JOptionPane.showMessageDialog(this, "Categoria não pode ser Excluida. Existe uma puxada vinculada a essa categoria.","Mensagem", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                catch(SQLException ex) 
                {
                    Logger.getLogger(ServicoBDAO.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                }
                finally
                {
                        try 
                        {
                            rs.close();
                        } 
                        catch (SQLException ex) 
                        {
                            Logger.getLogger(GerenciaCategoria.class.getName()).log(Level.SEVERE, null, ex);
                        }
                }
                int retorno = servico.deleteCategoria(jTextFieldCodigo.getText(), jTextFieldNome.getText());
                if(retorno == 1)
                {
                    limpar.limpajTextField(jTextFieldNome);
                    retornoBotao(clikmenu, 0);
                    codigo = "";
                    JOptionPane.showMessageDialog(null, "Categoria Excluída com Sucesso", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Categoria não pode ser Excluída", "Mensagem", JOptionPane.ERROR_MESSAGE);
                }
            }
            limpar.limpajTextField(jTextFieldNome);
            retornoBotao(clikmenu, 0);
        }
    }  
}//GEN-LAST:event_jButtonConfirmarActionPerformed

private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
    limpar.limpajTextField(jTextFieldCodigo);
    limpar.limpajTextField(jTextFieldNome);
    dispose();
}//GEN-LAST:event_jButtonFecharActionPerformed

private void jTextFieldCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoFocusLost
    if (evt.getOppositeComponent() instanceof JButton || evt.getComponent() instanceof JOptionPane || clicouBotaoPesquisa == 1)
    {
        clicouBotaoPesquisa = 0;
        return;
    }
    else
    {
        try 
        {

            ServicoBDAO servico = new ServicoBDAO();
            String zeros = "0000" + jTextFieldCodigo.getText().trim();
            jTextFieldCodigo.setText(zeros.substring(zeros.length() - 4));
            int codformatado = Integer.parseInt(jTextFieldCodigo.getText().trim());
            ResultSet rs = servico.selectCategoria(Integer.toString(codformatado), "1");
            if ((rs.next() == false) || (rs == null)) 
            {
                jTextFieldCodigo.setEnabled(true);
                rs.close();
                limpar.limpajTextField(jTextFieldCodigo);
                limpar.limpajTextField(jTextFieldNome);
                jTextFieldCodigo.requestFocus();
                JOptionPane.showMessageDialog(null,"Código não Cadastrado","Atenção",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                jTextFieldCodigo.setEnabled(false);
                jTextFieldNome.setText(rs.getString(2));
            }
        }
        catch (SQLException ex) 
        {
            Logger.getLogger(ValidarCodigoCategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_jTextFieldCodigoFocusLost

private void jButtonConsultaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultaCategoriaActionPerformed
    clicouBotaoPesquisa = 1;
    retornoBotao(clikmenu, 1);
    ConsultaCategoria consultaCategoria = new ConsultaCategoria(null, true);
    consultaCategoria.setVisible(true);
    if(consultaCategoria.codigo != -1)
    {
        jTextFieldCodigo.setText(Integer.toString(consultaCategoria.codigo));
        jTextFieldCodigo.transferFocus();
    }
}//GEN-LAST:event_jButtonConsultaCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GerenciaCategoria dialog = new GerenciaCategoria(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
   private void centralizar(){  
      /* Função para centralizar janela na tela */  
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  
       Dimension frameSize = getSize();  
       setLocation(new Point((screenSize.width - frameSize.width) / 2,  
                             (screenSize.height - frameSize.width) / 2));  
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonConsultaCategoria;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    /* Variavel criada para saber em qual menu foi clicado, para poder 
     * destinar o focu do campo apos clicar em confirma
     */
    public String clikmenu;  
    Limpar limpar = new Limpar();
    ServicoBDAO servico = new ServicoBDAO();
    public String codigo;
    
    //variavel criada para poder controlar evento focuslost do jTextFieldCodigo
    //se for = 0 significa que não clicou se for = 1 significa que clicou
    //assim não exibe mensagem de "Código Não Encontrado"
    private int clicouBotaoPesquisa = 0;
}
